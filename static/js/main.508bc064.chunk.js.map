{"version":3,"sources":["js/Socket.js","components/Players.jsx","components/Square.jsx","js/Rotate.js","js/Resize.js","components/Plateau.jsx","components/PieceRender.jsx","components/Choose.jsx","components/End.jsx","components/Game.jsx","components/AskServer.jsx","components/ConnexionError.jsx","App.js","serviceWorker.js","index.js"],"names":["Socket","callback","askServer","invalid","disconnect","url_string","window","location","href","target","URL","searchParams","get","connecting","history","replaceState","server","split","join","socket","SocketIO","on","connected","listener","getSocket","removeAllListeners","evt","data","message","content","emit","Players","props","change","setState","input","value","sendPseudo","e","preventDefault","state","length","send","name","ask","players","this","map","i","key","inGame","onClick","disabled","asked","id","className","getPlayersElements","method","action","nameError","autoFocus","type","placeholder","onChange","React","Component","Square","ref","elementRef","color","glow","selected","attacked","echec","roque","Rotate","element","funct","getSquareElementByLocation","classList","contains","last","pageY","changedTouches","pageX","loc","x","z","rotation","isTimeout","setTimeout","moveX","moveZ","places","current","getBoundingClientRect","el","tr","backgroundSize","width","top","height","left","zIndex","Math","round","transition","transform","Resize","resizeListener","squareElement","w","clientWidth","h","clientHeight","min","divider","computedStyle","getComputedStyle","elementHeight","elementWidth","parseFloat","paddingTop","paddingBottom","paddingLeft","paddingRight","Plateau","squares","find","a","y","tableElement","createRef","setGetSquareFunction","push","reverse","setElement","style","getStyle","display3d","prop","tableProperties","t","String","fromCharCode","PieceRender","clicked","getSize","getPicecStyle","Proposition","End","title","quit","Game","clickPiece","plateau","wrapperElement","toUpdate","transformOpen","pieces","end","endTitle","endMessage","setSquareContainerElement","onResize","forceUpdate","setCallback","getContainerWidth","onContextMenu","onTouchStart","onClickStart","onTouchMove","onMove","onTouchEnd","onClickEnd","onMouseDown","onMouseMove","onMouseUp","team","game","AskServer","download","ConnexionError","url","App","started","needAskServer","unknownServer","start","error","checked","htmlFor","data-checked","data-unchecked","Boolean","hostname","match","addEventListener","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.508bc064.chunk.js","sourcesContent":["import SocketIO from \"socket.io-client\";\n\nexport default class Socket {\n    static socket = null;\n    static connected = false;\n    static connecting = true;\n\n    static start(callback, askServer, invalid, disconnect) {\n        let url_string = window.location.href\n        let url = new URL(url_string);\n        let c = url.searchParams.get(\"server\");\n        let target = c;\n        if (target === null) {\n            Socket.connecting = false;\n            askServer();\n            return;\n        }\n        window.history.replaceState({server: \"server\"}, \"\", window.location.href.split(\"%3A\").join(':').split(\"%2F\").join(\"/\"));\n        Socket.socket = SocketIO(target);\n        Socket.socket.on('connect', () => {\n            Socket.connected = true;\n            Socket.connecting = false;\n            callback();\n        });\n        Socket.socket.on('disconnect', () => {\n            Socket.socket.disconnect();\n            Socket.connected = false;\n            Socket.connecting = false;\n            disconnect(target.split(\"%3A\").join(':').split(\"%2F\").join(\"/\"));\n        });\n        Socket.socket.on('connect_error', () => {\n            Socket.socket.disconnect();\n            Socket.connected = false;\n            Socket.connecting = false;\n            invalid(target.split(\"%3A\").join(':').split(\"%2F\").join(\"/\"));\n        });\n    }\n\n    static removeAllListeners(listener) {\n        if (Socket.getSocket()) Socket.getSocket().removeAllListeners(listener);\n    }\n\n    static on(evt, callback) {\n        if (Socket.getSocket()) Socket.socket.on(evt, data => callback(data));\n    }\n\n    static send(message, content) {\n        if (Socket.getSocket()) Socket.getSocket().emit(message, content);\n    }\n\n    static getSocket() {\n        return Socket.socket;\n    }\n}\n","import React from 'react';\nimport Socket from '../js/Socket';\n\nexport default class Players extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {input: \"\", players: []};\n    }\n\n    componentDidMount() {\n        Socket.on(\"players\", (data) => this.setState({players: data.players}));\n        Socket.send(\"updatePlayers\");\n    }\n\n    componentWillUnmount() {\n        Socket.removeAllListeners(\"players\");\n    }\n\n    change = (evt) => {\n        this.setState({input: evt.target.value});\n    }\n\n    sendPseudo = (e) => {\n        e.preventDefault();\n        if (this.state.input.length < 3 || this.state.input[0] === \"\" || this.state.input.length > 15) return;\n        Socket.send(\"join\", {name: this.state.input});\n    }\n\n    ask = (name) => {\n        Socket.send(\"ask\", {name: name});\n    }\n\n    getPlayersElements() {\n        return this.state.players.map((e, i) => (<li key={i}><span>{e.name}</span><span>{e.inGame ? \"En jeu\" : \"En attente\"}<button onClick={() => this.ask(e.name)} disabled={e.inGame}>{e.asked ? \"Rejoindre\" : \"Inviter\"}</button></span></li>));\n    }\n\n  render() {\n    return (\n      <section id=\"players\">\n          <div>\n            {(() => {\n                if (this.props.name) {\n                    return (<div className=\"players\">\n                      <h2>Joueurs</h2>\n                      <p>Connécté en tant que {this.props.name}</p>\n                      <ul id=\"playersInQueueList\">\n                        {this.getPlayersElements()}\n                      </ul>\n                    </div>);\n                }\n                return (<section>\n                    <h2>Choisissez votre pseudo</h2>\n                    <form method=\"GET\" action=\"\" className=\"usernameForm\">\n                      <input className={this.props.nameError ? \"error error--border\" : null} autoFocus type=\"text\" name=\"username\" placeholder=\"Pseudo\" value={this.state.input} onChange={this.change} />\n                      {<p className=\"error\">{this.props.nameError}</p>}\n                      <button type=\"submit\" onClick={this.sendPseudo} name=\"validate\">Rejoindre</button>\n                    </form>\n                </section>);\n            })()}\n          </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Socket from '../js/Socket';\n\nexport default class Square extends React.Component {\n\n    onClick = () => {\n        Socket.getSocket().emit(\"clickSquare\", {id: this.props.id});\n    }\n\n  render() {\n    return (\n      <div onClick={this.onClick} ref={this.props.elementRef} className={\"square \" + this.props.color + (this.props.glow ? \" glow\" : \"\") + (this.props.selected ? \" selected\" : \"\") + (this.props.attacked ? \" attacked\" : \"\") + (this.props.echec ? \" echec\" : \"\") + (this.props.roque ? \" roque\" : \"\")}></div>\n    )\n  }\n}\n","export default class Rotate {\n    static element = null;\n    static last = [];\n    static callback = () => {};\n    static rotation = {x: 55, z: 0};\n    static isTimeout = false;\n    static getSquareElementByLocation = () => {};\n\n    static setElement(element) {\n        Rotate.element = element;\n    }\n\n    static getElement() {\n        return Rotate.element;\n    }\n\n    static setGetSquareFunction(funct) {\n        Rotate.getSquareElementByLocation = funct;\n    }\n\n    static setCallback(callback) {Rotate.callback = callback}\n\n    static onClickStart(evt) {\n        if (!evt.target.classList.contains(\"wrapper\")) return;\n        Rotate.last[0] = evt.pageY || evt.changedTouches[0].pageY;\n        Rotate.last[1] = evt.pageX || evt.changedTouches[0].pageX;\n        Rotate.callback();\n    }\n\n    static onMove(evt) {\n        if (!Rotate.last.length || !Rotate.callback) return;\n        let loc = evt.type === \"mousemove\" ? [evt.pageY, evt.pageX] : [evt.changedTouches[0].pageY, evt.changedTouches[0].pageX];\n        let x = Rotate.last[0] - loc[0];\n        let z = Rotate.last[1] - loc[1];\n        if (evt.type === \"mousemove\") z /= 2;\n            Rotate.rotation.x += x / 2;\n            Rotate.last[0] = loc[0];\n            Rotate.rotation.z += z / 2;\n            Rotate.last[1] = loc[1];\n        if (Rotate.rotation.x > 55) Rotate.rotation.x = 55;\n        if (Rotate.rotation.x < 0) Rotate.rotation.x = 0;\n        // if (Rotate.rotation.z < -90) Rotate.rotation.z = -90;\n        // if (Rotate.rotation.z > 90) Rotate.rotation.z = 90;\n        if (Rotate.isTimeout) return;\n        Rotate.isTimeout = true;\n        setTimeout(() => {\n            Rotate.callback();\n            Rotate.isTimeout = false;\n        }, 10);\n    }\n\n    static onClickEnd(evt) {\n        Rotate.last = [];\n        Rotate.moveX = false;\n        Rotate.moveZ = false;\n        Rotate.callback();\n    }\n\n    static getPicecStyle(location) {\n        let places = Rotate.getSquareElementByLocation(location).current.getBoundingClientRect();\n        let el = Rotate.element.getBoundingClientRect();\n        let tr = {backgroundSize: ((places.width * 6) + \"px \" + (places.width * 2) + \"px\"),\n        top: (places.top + (places.height / 2) - places.width + (places.width / 3) - el.top) + \"px\",\n        left: (places.left - el.left + 10) + \"px\",\n        width: (places.width - 20) + \"px\",\n        zIndex: Math.round(places.top)};\n        if (Rotate.last.length) tr.transition = \"none\";\n        return tr;\n    }\n\n    static getStyle() {\n        return {transform: \"rotateX(\" + Rotate.rotation.x + \"deg) rotateZ(\" + (Rotate.rotation.z) + \"deg) scale(0.65)\"};\n    }\n\n    // Non utilisé\n    // static getDistance(loc1, loc2) {\n    //     return Math.sqrt((loc1[0] - loc2[0]) ** 2 + (loc1[1] - loc2[1]) ** 2);\n    // }\n}\n","export default class Resize {\n    static element = null;\n    static squareElement = null;\n    static callback = () => {};\n    static isTimeout = false;\n\n    static setElement(element) {\n        Resize.element = element;\n        Resize.resizeListener();\n    }\n\n    static getElement() {\n        return Resize.element;\n    }\n\n    static setSquareContainerElement(element) {\n        Resize.squareElement = element;\n        Resize.resizeListener();\n    }\n\n    static getSquareContainerElement() {\n        return Resize.squareElement;\n    }\n\n    static onResize(callback) {Resize.callback = callback}\n\n    static getContainerWidth() {\n        if (!Resize.squareElement) return 0;\n        let w = Resize.squareElement.clientWidth;\n        let h = Resize.squareElement.clientHeight;\n        return Math.min(w, h);\n    }\n\n    static getSize(divider = 1, split = 1) {\n        if (Resize.element) {\n            let computedStyle = getComputedStyle(this.element);\n            let elementHeight = this.element.clientHeight;\n            let elementWidth = this.element.clientWidth;\n            elementHeight -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n            elementWidth -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n            return {width: (elementWidth / divider) * split, height: (elementHeight / divider) * split};\n        }\n        return {width: (816 / divider) * split, height: (816 / divider) * split};\n    }\n\n    static resizeListener() {\n        Resize.callback();\n\n        // For phone (when rotate, need update for pieces after container size changed)\n        setTimeout(() => {\n            Resize.callback();\n            Resize.isTimeout = false;\n        }, 150);\n    }\n}\n","import React from 'react';\nimport Square from './Square.jsx';\nimport Rotate from '../js/Rotate';\nimport Resize from '../js/Resize';\n\nexport default class Plateau extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {squares: []};\n    this.tableElement = React.createRef();\n    Rotate.setGetSquareFunction(this.getSquareElementByLocation);\n    let id = 0;\n    for (let y = 0; y < 8; y++) {\n      for (let x = 0; x < 8; x++) {\n        this.state.squares.push({id: id, elementRef: React.createRef(), location:{x: x, y: y}, color: (x%2 - y%2 ? \"black\" : \"white\")});\n        id++;\n      }\n    }\n    if (this.props.reverse) this.state.squares.reverse();\n  }\n\n  componentDidMount() {\n      Resize.setElement(this.tableElement.current);\n  }\n\n  getSquareElementByLocation = (location) => {\n      return this.state.squares.find(a => a.location.x === location.x && a.location.y === location.y).elementRef;\n  }\n\n  render() {\n    return (\n      <section id=\"plateau\" ref={this.tableElement} style={Rotate.getStyle()} className={this.props.display3d ? \"transform\" : \"\"}>\n        {this.state.squares.map((e, i) => {\n            let prop = this.props.tableProperties.find(t => t.id === e.id);\n            let selected = false,\n            glow = false,\n            roque = false,\n            attacked = false,\n            echec = false;\n            if (prop) {\n                if (prop.selected) selected = true;\n                else if (prop.glow) glow = true;\n                else if (prop.roque) roque = true;\n                else if (prop.attacked) attacked = true;\n                else if (prop.echec) echec = true;\n            }\n            return (<Square key={i} elementRef={e.elementRef} id={e.id} display3d={this.props.display3d} selected={selected} roque={roque} glow={glow} echec={echec} attacked={attacked} location={e.location} color={e.color} />)\n        })}\n        <div className=\"numbers\">\n            {\n                (() => {\n                    let tr = [];\n                    for (var i = 0; i < 8; i++) {\n                        tr.push(<span key={i}>{i+1}</span>);\n                    }\n                    return tr;\n                })()\n            }\n        </div>\n        <div className=\"letters\">\n            {\n                (() => {\n                    let tr = [];\n                    for (var i = 0; i < 8; i++) {\n                        tr.push(<span key={i}>{String.fromCharCode(i + 65)}</span>);\n                    }\n                    return tr;\n                })()\n            }\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Resize from '../js/Resize';\nimport Rotate from '../js/Rotate';\n\nexport default class PieceRender extends React.Component {\n\n  constructor(props) {\n    super(props);\n    if (!this.type) this.type = this.props.type;\n  }\n\n  onClick = () => {\n      if (this.props.clicked) this.props.clicked(this.props.id);\n  }\n\n  render() {\n    let location = this.props.location ? this.props.location : {x: 0, y: 0};\n    if (this.props.reverse && !this.props.display3d) location = {x: 7 - this.props.location.x, y: 7 - this.props.location.y};\n    let style = {backgroundSize: (Resize.getSize(8, 6).width + \"px \" + Resize.getSize(8, 2).width + \"px\"), top: location.y * Resize.getSize(8).width + 20 + \"px\", left: location.x * Resize.getSize(8).width + 20 + \"px\", width: Resize.getSize(8).width + \"px\", height: Resize.getSize(8).width + \"px\"};\n    return (\n      <span onClick={this.onClick} className={\"piece \" + this.props.color + \" \" + this.type + (this.props.display3d ? \" display3d\" : \"\")} style={this.props.display3d ? Rotate.getPicecStyle(location) : style}></span>\n    )\n  }\n}\n","import React from 'react';\nimport PieceRender from './PieceRender';\n\nexport default class Plateau extends React.Component {\n\n  onClick = (type) => {\n    this.props.transform(type);\n  }\n\n  render() {\n    return (\n      <section id=\"choosePane\">\n          <div>\n            <h2>En quoi voullez-vous transformer le pion ?</h2>\n            <div>\n                <div>\n                    {(() => {\n                        let tr = [];\n                        let all = [\"reine\", \"fou\", \"tour\", \"cavalier\"];\n                        for (let e of all) {\n                          tr.push(<Proposition key={tr.length} color={this.props.color} onClick={this.onClick} type={e} />);\n                        }\n                        return tr;\n                    })()}\n                </div>\n            </div>\n          </div>\n      </section>\n    )\n  }\n}\n\nclass Proposition extends React.Component {\n  render() {\n    return (\n      <div className={\"square\"} onClick={() => {this.props.onClick(this.props.type)}}>\n        <PieceRender type={this.props.type} color={this.props.color} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class End extends React.Component {\n\n  render() {\n    return (\n      <section id=\"choosePane\">\n          <div>\n            <h2>{this.props.title}</h2>\n            <p>{this.props.message}</p>\n            <button onClick={this.props.quit}>Retour au salon</button>\n          </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Plateau from './Plateau';\nimport Choose from './Choose';\nimport End from './End';\nimport PieceRender from './PieceRender';\nimport Resize from '../js/Resize';\nimport Socket from '../js/Socket';\nimport Rotate from '../js/Rotate';\n\nexport default class Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.plateau = React.createRef();\n    this.squareElement = React.createRef();\n    this.wrapperElement = React.createRef();\n    this.toUpdate = 0;\n    this.state = {transformOpen: false, pieces: [], tableProperties: [], end: false, endTitle: \"\", endMessage: \"\"};\n    Socket.on(\"tableUpdate\", data => this.setState({tableProperties: data.tableProperties}));\n    Socket.on(\"update\", data => this.setState({pieces: data.pieces, tableProperties: data.tableProperties, transformOpen: false}));\n    Socket.on(\"transform\", data => this.setState({transformOpen: true}));\n    Socket.on(\"end\", data => {this.setState({end: true, endTitle: data.title, endMessage: data.message})});\n  }\n\n  componentDidMount() {\n      Resize.setSquareContainerElement(this.squareElement.current);\n\n      Rotate.setElement(this.wrapperElement.current);\n\n      Resize.onResize(() => this.forceUpdate());\n      Rotate.setCallback(() => {\n          this.forceUpdate();\n          this.toUpdate++;\n      });\n      this.forceUpdate();\n  }\n\n  componentDidUpdate() {\n      if (this.toUpdate > 0) {\n          this.toUpdate--;\n          this.forceUpdate();\n      }\n  }\n\n  clickPiece = (id) => {\n      Socket.send(\"clickPiece\", {id: id});\n  }\n\n  transform(type) {\n      Socket.send(\"transform\", {type: type});\n  }\n\n  render() {\n    return (\n        <section id=\"squareContainer\" ref={this.squareElement}>\n            <section id=\"game\" style={{width: Resize.getContainerWidth() + \"px\", height: Resize.getContainerWidth() + \"px\"}} onContextMenu={evt => evt.preventDefault()} onTouchStart={Rotate.onClickStart} onTouchMove={Rotate.onMove} onTouchEnd={Rotate.onClickEnd} onMouseDown={Rotate.onClickStart} onMouseMove={Rotate.onMove} onMouseUp={Rotate.onClickEnd} className={this.props.team}>\n                <div id=\"tableContainer\" ref={this.tableElement} >\n                    <section ref={this.wrapperElement} className={\"wrapper \" + this.props.team}>\n                        <Plateau reverse={this.props.team === \"black\"} display3d={this.props.display3d} game={this} ref={this.plateau} tableProperties={this.state.tableProperties} />\n                        {\n                            this.state.pieces.map(e => {\n                                let location = e.location;\n                                return (<PieceRender reverse={this.props.team === \"black\"} display3d={this.props.display3d} key={e.id} id={e.id} type={e.type} location={location} color={e.color} clicked={this.clickPiece} />)\n                            })\n                        }\n                    </section>\n                </div>\n                {this.state.end ? <End quit={this.props.quit} title={this.state.endTitle} message={this.state.endMessage} /> : null}\n                {this.state.transformOpen && !this.state.end ? <Choose transform={(type) => this.transform(type)} color={this.props.team} /> : null}\n            </section>\n        </section>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class AskServer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {input: \"http://\"};\n    }\n\n    change = (evt) => {\n        this.setState({input: evt.target.value});\n    }\n\n  render() {\n    return (\n      <section id=\"players\">\n          <div>\n            <section>\n                <h2>Connexion à un serveur sur le réseau local</h2>\n                <form method=\"GET\" action=\"./\" className=\"usernameForm\">\n                  <input autoFocus type=\"text\" name=\"server\" placeholder=\"Adresse du serveur\" value={this.state.input} onChange={this.change} />\n                  <button type=\"submit\">Connexion</button>\n                </form>\n                <p>Ou téléchargez un serveur local pour</p>\n                <a href=\"chess-lan-server-macos\" download>MacOS x 64</a>\n                <a href=\"chess-lan-server-windows.exe\" download>Windows x 64</a>\n            </section>\n          </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class ConnexionError extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {input: props.url};\n    }\n\n    change = (evt) => {\n        this.setState({input: evt.target.value});\n    }\n\n  render() {\n    return (\n      <section id=\"players\">\n          <div>\n            <section>\n                <h2 className=\"error\">Erreur !</h2>\n                <p className=\"error\">{this.props.message}</p>\n                <h3>Réssayer</h3>\n                <form method=\"GET\" action=\"./\" className=\"usernameForm\">\n                  <input className=\"error error--border\" autoFocus type=\"text\" name=\"server\" placeholder=\"Adresse du serveur\" value={this.state.input} onChange={this.change} />\n                  <button type=\"submit\">Connexion</button>\n                </form>\n            </section>\n          </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Players from './components/Players';\nimport Game from './components/Game';\nimport AskServer from './components/AskServer';\nimport Socket from './js/Socket';\nimport ConnexionError from './components/ConnexionError';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {started: false, team: \"white\", nameError: null, display3d: false, name: null, needAskServer: false, unknownServer: null, disconnect: null};\n    }\n\n    componentDidMount() {\n        Socket.start(() => {\n            Socket.on(\"nameError\", (data) => this.setState({nameError: data.error}));\n            Socket.on(\"name\", (data) => this.setState({name: data.name}));\n            Socket.on(\"start\", (data) => this.setState({started: true, team: data.team}));\n            this.forceUpdate();\n        }, () => this.setState({needAskServer: true}), (url) => this.setState({unknownServer: url}), (url) => this.setState({disconnect: url}));\n    }\n\n    quit = () => {\n        this.setState({started: false, team: \"white\", display3d: false});\n    }\n\n    render() {\n        if (!Socket.connecting) {\n            if (this.state.disconnect) {\n                return (<main><ConnexionError url={this.state.disconnect} message={\"Communication avec le serveur interrompue (\\\"\" + this.state.disconnect + \"\\\")\"} /></main>)\n            } else if (this.state.started) {\n                return (\n                    <main>\n                        <div className=\"can-toggle\">\n                          <input id=\"e\" type=\"checkbox\" onChange={(evt) => this.setState({display3d: evt.target.checked})} />\n                          <label htmlFor=\"e\" data-checked=\"3D\" data-unchecked=\"2D\">\n                            <div></div>\n                          </label>\n                        </div>\n                        <Game quit={this.quit} team={this.state.team} display3d={this.state.display3d} />\n                    </main>\n                );\n            } else if (this.state.needAskServer) {\n                return (<main><AskServer /></main>)\n            } else if (this.state.unknownServer) {\n                return (<main><ConnexionError url={this.state.unknownServer} message={\"Impossible de se connecter au serveur (\\\"\" + this.state.unknownServer + \"\\\")\"} /></main>)\n            }\n            return (<main><Players nameError={this.state.nameError} name={this.state.name} /></main>)\n        }\n        // connecting page\n        return <main></main>\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.min.css';\nimport App from './App';\nimport Resize from './js/Resize';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener('resize', Resize.resizeListener);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}